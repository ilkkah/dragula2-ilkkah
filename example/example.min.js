(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var sortable = $('sortable');

dragula([$('left-defaults'), $('right-defaults')]);
dragula([$('left-copy'), $('right-copy')], { copy: true });
dragula([$('left-events'), $('right-events')])
  .on('drag', function (el) {
    el.className = el.className.replace('ex-moved', '');
  })
  .on('drop', function (el) {
    el.className += ' ex-moved';
  })
  .on('over', function (el, container) {
    container.className += ' ex-over';
  })
  .on('out', function (el, container) {
    container.className = container.className.replace('ex-over', '');
  });
dragula([$('left-rollbacks'), $('right-rollbacks')], { revertOnSpill: true });
dragula([$('left-lovehandles'), $('right-lovehandles')], {
  moves: function (el, container, handle) {
    return handle.classList.contains('handle');
  },
});

dragula([$('left-rm-spill'), $('right-rm-spill')], { removeOnSpill: true });
dragula([$('left-copy-1tomany'), $('right-copy-1tomany')], {
  copy: function (el, source) {
    return source === $('left-copy-1tomany');
  },
  accepts: function (el, target) {
    return target !== $('left-copy-1tomany');
  },
});

dragula([sortable]);

sortable.addEventListener('click', clickHandler);

function clickHandler(e) {
  var target = e.target;
  if (target === sortable) {
    return;
  }
  target.innerHTML += ' [click!]';

  setTimeout(function () {
    target.innerHTML = target.innerHTML.replace(/ \[click!\]/g, '');
  }, 500);
}

function $(id) {
  return document.getElementById(id);
}

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy5sb2NhbC9zaGFyZS9wbnBtL3N0b3JlL3YzL3RtcC9kbHgtMjE4ODcvbm9kZV9tb2R1bGVzLy5wbnBtL2Jyb3dzZXItcGFja0A2LjEuMC9ub2RlX21vZHVsZXMvYnJvd3Nlci1wYWNrL19wcmVsdWRlLmpzIiwiZXhhbXBsZS9leGFtcGxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsIid1c2Ugc3RyaWN0JztcblxudmFyIHNvcnRhYmxlID0gJCgnc29ydGFibGUnKTtcblxuZHJhZ3VsYShbJCgnbGVmdC1kZWZhdWx0cycpLCAkKCdyaWdodC1kZWZhdWx0cycpXSk7XG5kcmFndWxhKFskKCdsZWZ0LWNvcHknKSwgJCgncmlnaHQtY29weScpXSwgeyBjb3B5OiB0cnVlIH0pO1xuZHJhZ3VsYShbJCgnbGVmdC1ldmVudHMnKSwgJCgncmlnaHQtZXZlbnRzJyldKVxuICAub24oJ2RyYWcnLCBmdW5jdGlvbiAoZWwpIHtcbiAgICBlbC5jbGFzc05hbWUgPSBlbC5jbGFzc05hbWUucmVwbGFjZSgnZXgtbW92ZWQnLCAnJyk7XG4gIH0pXG4gIC5vbignZHJvcCcsIGZ1bmN0aW9uIChlbCkge1xuICAgIGVsLmNsYXNzTmFtZSArPSAnIGV4LW1vdmVkJztcbiAgfSlcbiAgLm9uKCdvdmVyJywgZnVuY3Rpb24gKGVsLCBjb250YWluZXIpIHtcbiAgICBjb250YWluZXIuY2xhc3NOYW1lICs9ICcgZXgtb3Zlcic7XG4gIH0pXG4gIC5vbignb3V0JywgZnVuY3Rpb24gKGVsLCBjb250YWluZXIpIHtcbiAgICBjb250YWluZXIuY2xhc3NOYW1lID0gY29udGFpbmVyLmNsYXNzTmFtZS5yZXBsYWNlKCdleC1vdmVyJywgJycpO1xuICB9KTtcbmRyYWd1bGEoWyQoJ2xlZnQtcm9sbGJhY2tzJyksICQoJ3JpZ2h0LXJvbGxiYWNrcycpXSwgeyByZXZlcnRPblNwaWxsOiB0cnVlIH0pO1xuZHJhZ3VsYShbJCgnbGVmdC1sb3ZlaGFuZGxlcycpLCAkKCdyaWdodC1sb3ZlaGFuZGxlcycpXSwge1xuICBtb3ZlczogZnVuY3Rpb24gKGVsLCBjb250YWluZXIsIGhhbmRsZSkge1xuICAgIHJldHVybiBoYW5kbGUuY2xhc3NMaXN0LmNvbnRhaW5zKCdoYW5kbGUnKTtcbiAgfSxcbn0pO1xuXG5kcmFndWxhKFskKCdsZWZ0LXJtLXNwaWxsJyksICQoJ3JpZ2h0LXJtLXNwaWxsJyldLCB7IHJlbW92ZU9uU3BpbGw6IHRydWUgfSk7XG5kcmFndWxhKFskKCdsZWZ0LWNvcHktMXRvbWFueScpLCAkKCdyaWdodC1jb3B5LTF0b21hbnknKV0sIHtcbiAgY29weTogZnVuY3Rpb24gKGVsLCBzb3VyY2UpIHtcbiAgICByZXR1cm4gc291cmNlID09PSAkKCdsZWZ0LWNvcHktMXRvbWFueScpO1xuICB9LFxuICBhY2NlcHRzOiBmdW5jdGlvbiAoZWwsIHRhcmdldCkge1xuICAgIHJldHVybiB0YXJnZXQgIT09ICQoJ2xlZnQtY29weS0xdG9tYW55Jyk7XG4gIH0sXG59KTtcblxuZHJhZ3VsYShbc29ydGFibGVdKTtcblxuc29ydGFibGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjbGlja0hhbmRsZXIpO1xuXG5mdW5jdGlvbiBjbGlja0hhbmRsZXIoZSkge1xuICB2YXIgdGFyZ2V0ID0gZS50YXJnZXQ7XG4gIGlmICh0YXJnZXQgPT09IHNvcnRhYmxlKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHRhcmdldC5pbm5lckhUTUwgKz0gJyBbY2xpY2shXSc7XG5cbiAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgdGFyZ2V0LmlubmVySFRNTCA9IHRhcmdldC5pbm5lckhUTUwucmVwbGFjZSgvIFxcW2NsaWNrIVxcXS9nLCAnJyk7XG4gIH0sIDUwMCk7XG59XG5cbmZ1bmN0aW9uICQoaWQpIHtcbiAgcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcbn1cbiJdfQ==
